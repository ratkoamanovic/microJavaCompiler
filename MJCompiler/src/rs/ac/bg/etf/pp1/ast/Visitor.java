// generated with ast extension for cup
// version 0.8
// 12/0/2020 19:54:19


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(AbstractAndBasicMethodDeclList AbstractAndBasicMethodDeclList);
    public void visit(Unmatched Unmatched);
    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(SameDesignatorList SameDesignatorList);
    public void visit(Matched Matched);
    public void visit(AbstractClassName AbstractClassName);
    public void visit(Relop Relop);
    public void visit(SameTypeVarList SameTypeVarList);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(SameTypeConstList SameTypeConstList);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(AbstractMethodDecl AbstractMethodDecl);
    public void visit(SameTypeVar SameTypeVar);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(SameTypeConst SameTypeConst);
    public void visit(OptionalExpr OptionalExpr);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(ActParsList ActParsList);
    public void visit(OptionalAbstractMethodDeclClass OptionalAbstractMethodDeclClass);
    public void visit(ActualParamList ActualParamList);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(OptionalActPars OptionalActPars);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ActualPars ActualPars);
    public void visit(OptionalCondition OptionalCondition);
    public void visit(OptionalMethodDeclClass OptionalMethodDeclClass);
    public void visit(OptionalDesignatorStatement OptionalDesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(OptionalExtendsType OptionalExtendsType);
    public void visit(FormPars FormPars);
    public void visit(AddopTermList AddopTermList);
    public void visit(MulopPercent MulopPercent);
    public void visit(MulopDivide MulopDivide);
    public void visit(MulopMultiply MulopMultiply);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLessEqual RelopLessEqual);
    public void visit(RelopLess RelopLess);
    public void visit(RelopGreaterEqual RelopGreaterEqual);
    public void visit(RelopGreater RelopGreater);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqualEqual RelopEqualEqual);
    public void visit(Assignop Assignop);
    public void visit(OnlyArrayDesignator OnlyArrayDesignator);
    public void visit(SimpleDesignator SimpleDesignator);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorClass DesignatorClass);
    public void visit(ParenthesesFactor ParenthesesFactor);
    public void visit(NewTypeFactor NewTypeFactor);
    public void visit(NewTypeExprFactor NewTypeExprFactor);
    public void visit(BoolconstFactor BoolconstFactor);
    public void visit(CharconstFactor CharconstFactor);
    public void visit(NumconstFactor NumconstFactor);
    public void visit(DesignatorWithoutActFactor DesignatorWithoutActFactor);
    public void visit(DesignatorWithActFactor DesignatorWithActFactor);
    public void visit(SingleFactorTerm SingleFactorTerm);
    public void visit(MulopFactorTerm MulopFactorTerm);
    public void visit(MinusTerm MinusTerm);
    public void visit(PlusTerm PlusTerm);
    public void visit(MultyTerms MultyTerms);
    public void visit(NoExpr NoExpr);
    public void visit(WithExpr WithExpr);
    public void visit(ExprCondFact ExprCondFact);
    public void visit(RelopCondFact RelopCondFact);
    public void visit(Or Or);
    public void visit(And And);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(MultyCondFact MultyCondFact);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(MultyCondTerm MultyCondTerm);
    public void visit(NoCondition NoCondition);
    public void visit(WithCondition WithCondition);
    public void visit(ActPar ActPar);
    public void visit(SingleActPars SingleActPars);
    public void visit(MultyActPars MultyActPars);
    public void visit(NoActPars NoActPars);
    public void visit(WithActPars WithActPars);
    public void visit(ActParsStartLeftParen ActParsStartLeftParen);
    public void visit(DesignatorStatementMinusMinus DesignatorStatementMinusMinus);
    public void visit(DesignatorStatementPlusPlus DesignatorStatementPlusPlus);
    public void visit(DesignatorStatementOptAct DesignatorStatementOptAct);
    public void visit(DesignatorStatementAssignopError DesignatorStatementAssignopError);
    public void visit(DesignatorStatementAssignop DesignatorStatementAssignop);
    public void visit(NoDesignatorStatement NoDesignatorStatement);
    public void visit(WithDesignatorStatement WithDesignatorStatement);
    public void visit(ForRightParen ForRightParen);
    public void visit(Else Else);
    public void visit(IfCondition IfCondition);
    public void visit(ForSemi ForSemi);
    public void visit(IfLeftParen IfLeftParen);
    public void visit(StatementMulty StatementMulty);
    public void visit(StatementPrintWithConst StatementPrintWithConst);
    public void visit(StatementPrintNoConst StatementPrintNoConst);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturn StatementReturn);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementForError StatementForError);
    public void visit(StatementFor StatementFor);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementIf StatementIf);
    public void visit(StatementDesignatorStatement StatementDesignatorStatement);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(FormalParamDeclArray FormalParamDeclArray);
    public void visit(FormalParamDeclSingle FormalParamDeclSingle);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDeclsError FormalParamDeclsError);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(VoidMethodTypeName VoidMethodTypeName);
    public void visit(TypeMethodTypeName TypeMethodTypeName);
    public void visit(MethodDeclError MethodDeclError);
    public void visit(MethodDeclNoError MethodDeclNoError);
    public void visit(AbstractMethodDeclError AbstractMethodDeclError);
    public void visit(AbstractMethodDeclNoError AbstractMethodDeclNoError);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(NoAbstractAndBasicMethodDecl NoAbstractAndBasicMethodDecl);
    public void visit(AbstractAndBasicMethodAbstract AbstractAndBasicMethodAbstract);
    public void visit(AbstractAndBasicMethodBasic AbstractAndBasicMethodBasic);
    public void visit(AbstractClassDecl AbstractClassDecl);
    public void visit(ClassName ClassName);
    public void visit(NoOptionalExtendsType NoOptionalExtendsType);
    public void visit(WithOptionalExtendsType WithOptionalExtendsType);
    public void visit(NoOptionalAbstractMethodDeclClass NoOptionalAbstractMethodDeclClass);
    public void visit(WithOptionalAbstractMethodDeclClass WithOptionalAbstractMethodDeclClass);
    public void visit(NoOptionalMethodDeclClass NoOptionalMethodDeclClass);
    public void visit(WithOptionalMethodDeclClass WithOptionalMethodDeclClass);
    public void visit(ClassDecl ClassDecl);
    public void visit(Type Type);
    public void visit(SameTypeVarOne SameTypeVarOne);
    public void visit(SameTypeVarArray SameTypeVarArray);
    public void visit(SingleSameTypeVar SingleSameTypeVar);
    public void visit(SameTypeVarsError SameTypeVarsError);
    public void visit(SameTypeVars SameTypeVars);
    public void visit(VarDeclError VarDeclError);
    public void visit(VarDeclNoError VarDeclNoError);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(SameTypeConstBool SameTypeConstBool);
    public void visit(SameTypeConstChar SameTypeConstChar);
    public void visit(SameTypeConstNum SameTypeConstNum);
    public void visit(SingleSameTypeConst SingleSameTypeConst);
    public void visit(SameTypeConsts SameTypeConsts);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoDeclList NoDeclList);
    public void visit(DeclListClass DeclListClass);
    public void visit(DeclListAbstractClass DeclListAbstractClass);
    public void visit(DeclListVar DeclListVar);
    public void visit(DeclListConst DeclListConst);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
