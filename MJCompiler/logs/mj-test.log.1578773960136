INFO  21:32:32,709 - Compiling source file: C:\Users\ratko\Desktop\PP1-Projekat\pp1lab.templateAST\workspace\MJCompiler\test\test302.mj
INFO  21:32:32,738 - #2 program
INFO  21:32:32,738 - #28 test302
INFO  21:32:32,738 - #35 const
INFO  21:32:32,739 - #28 int
INFO  21:32:32,739 - #28 jedan
INFO  21:32:32,739 - #12 =
INFO  21:32:32,739 - #25 1
INFO  21:32:32,739 - #5 ;
INFO  21:32:32,740 - #28 int
INFO  21:32:32,740 - #28 i
INFO  21:32:32,740 - #5 ;
INFO  21:32:32,740 - #28 bool
INFO  21:32:32,741 - #28 ibool
INFO  21:32:32,741 - #5 ;
INFO  21:32:32,741 - #28 int
INFO  21:32:32,741 - #28 niz
INFO  21:32:32,741 - #14 [
INFO  21:32:32,741 - #15 ]
INFO  21:32:32,741 - #5 ;
INFO  21:32:32,741 - #3 {
INFO  21:32:32,741 - #28 int
INFO  21:32:32,745 - #28 sum
INFO  21:32:32,745 - #6 (
INFO  21:32:32,745 - #28 int
INFO  21:32:32,745 - #28 z
INFO  21:32:32,745 - #8 ,
INFO  21:32:32,745 - #28 int
INFO  21:32:32,745 - #28 d
INFO  21:32:32,745 - #7 )
INFO  21:32:32,746 - #3 {
INFO  21:32:32,746 - #10 return
INFO  21:32:32,747 - #28 z
INFO  21:32:32,747 - #11 +
INFO  21:32:32,747 - #28 d
INFO  21:32:32,747 - #5 ;
INFO  21:32:32,748 - #4 }
INFO  21:32:32,748 - #28 int
INFO  21:32:32,748 - #28 inkrement
INFO  21:32:32,749 - #6 (
INFO  21:32:32,749 - #28 int
INFO  21:32:32,749 - #28 a
INFO  21:32:32,749 - #8 ,
INFO  21:32:32,749 - #28 int
INFO  21:32:32,749 - #28 inc
INFO  21:32:32,749 - #7 )
INFO  21:32:32,749 - #28 int
INFO  21:32:32,749 - #28 pom
INFO  21:32:32,749 - #5 ;
INFO  21:32:32,749 - #3 {
INFO  21:32:32,749 - #29 if
INFO  21:32:32,749 - #6 (
INFO  21:32:32,749 - #28 inc
INFO  21:32:32,749 - #40 ==
INFO  21:32:32,749 - #28 jedan
INFO  21:32:32,750 - #7 )
INFO  21:32:32,750 - #28 pom
INFO  21:32:32,750 - #12 =
INFO  21:32:32,751 - #25 1
INFO  21:32:32,751 - #5 ;
INFO  21:32:32,751 - #30 else
INFO  21:32:32,751 - #29 if
INFO  21:32:32,751 - #6 (
INFO  21:32:32,751 - #28 inc
INFO  21:32:32,751 - #40 ==
INFO  21:32:32,751 - #25 2
INFO  21:32:32,751 - #7 )
INFO  21:32:32,752 - #28 pom
INFO  21:32:32,752 - #12 =
INFO  21:32:32,752 - #28 a
INFO  21:32:32,752 - #5 ;
INFO  21:32:32,752 - #10 return
INFO  21:32:32,752 - #28 sum
INFO  21:32:32,752 - #6 (
INFO  21:32:32,752 - #28 a
INFO  21:32:32,752 - #8 ,
INFO  21:32:32,753 - #28 pom
INFO  21:32:32,753 - #7 )
INFO  21:32:32,753 - #5 ;
INFO  21:32:32,753 - #4 }
INFO  21:32:32,753 - #28 bool
INFO  21:32:32,753 - #28 verify
INFO  21:32:32,754 - #6 (
INFO  21:32:32,754 - #7 )
INFO  21:32:32,754 - #3 {
INFO  21:32:32,754 - #9 print
INFO  21:32:32,754 - #6 (
INFO  21:32:32,754 - #26 v
INFO  21:32:32,754 - #7 )
INFO  21:32:32,754 - #5 ;
INFO  21:32:32,754 - #10 return
INFO  21:32:32,754 - #27 false
INFO  21:32:32,754 - #5 ;
INFO  21:32:32,754 - #4 }
INFO  21:32:32,754 - #13 void
INFO  21:32:32,754 - #28 main
INFO  21:32:32,755 - #6 (
INFO  21:32:32,755 - #7 )
INFO  21:32:32,755 - #3 {
INFO  21:32:32,755 - #29 if
INFO  21:32:32,755 - #6 (
INFO  21:32:32,755 - #25 1
INFO  21:32:32,755 - #41 !=
INFO  21:32:32,755 - #25 1
INFO  21:32:32,755 - #7 )
INFO  21:32:32,755 - #9 print
INFO  21:32:32,755 - #6 (
INFO  21:32:32,755 - #20 -
INFO  21:32:32,755 - #25 6
INFO  21:32:32,755 - #7 )
INFO  21:32:32,755 - #5 ;
INFO  21:32:32,755 - #30 else
INFO  21:32:32,755 - #9 print
INFO  21:32:32,755 - #6 (
INFO  21:32:32,755 - #25 0
INFO  21:32:32,756 - #7 )
INFO  21:32:32,756 - #5 ;
INFO  21:32:32,756 - #28 ibool
INFO  21:32:32,756 - #12 =
INFO  21:32:32,756 - #27 false
INFO  21:32:32,756 - #5 ;
INFO  21:32:32,756 - #28 i
INFO  21:32:32,756 - #12 =
INFO  21:32:32,756 - #25 0
INFO  21:32:32,756 - #5 ;
INFO  21:32:32,756 - #31 for
INFO  21:32:32,756 - #6 (
INFO  21:32:32,756 - #28 i
INFO  21:32:32,756 - #12 =
INFO  21:32:32,756 - #25 0
INFO  21:32:32,756 - #5 ;
INFO  21:32:32,756 - #28 i
INFO  21:32:32,756 - #45 <
INFO  21:32:32,759 - #25 5
INFO  21:32:32,759 - #5 ;
INFO  21:32:32,759 - #28 i
INFO  21:32:32,759 - #16 ++
INFO  21:32:32,759 - #7 )
INFO  21:32:32,759 - #3 {
INFO  21:32:32,760 - #29 if
INFO  21:32:32,760 - #6 (
INFO  21:32:32,760 - #28 i
INFO  21:32:32,760 - #40 ==
INFO  21:32:32,760 - #25 2
INFO  21:32:32,760 - #7 )
INFO  21:32:32,760 - #28 ibool
INFO  21:32:32,760 - #12 =
INFO  21:32:32,760 - #27 true
INFO  21:32:32,760 - #5 ;
INFO  21:32:32,760 - #4 }
INFO  21:32:32,760 - #29 if
INFO  21:32:32,760 - #6 (
INFO  21:32:32,760 - #28 ibool
INFO  21:32:32,760 - #7 )
INFO  21:32:32,760 - #29 if
INFO  21:32:32,760 - #6 (
INFO  21:32:32,760 - #28 i
INFO  21:32:32,760 - #40 ==
INFO  21:32:32,760 - #25 5
INFO  21:32:32,760 - #7 )
INFO  21:32:32,760 - #9 print
INFO  21:32:32,760 - #6 (
INFO  21:32:32,760 - #25 1
INFO  21:32:32,760 - #7 )
INFO  21:32:32,761 - #5 ;
INFO  21:32:32,761 - #30 else
INFO  21:32:32,761 - #9 print
INFO  21:32:32,761 - #6 (
INFO  21:32:32,761 - #20 -
INFO  21:32:32,761 - #25 1
INFO  21:32:32,761 - #7 )
INFO  21:32:32,761 - #5 ;
INFO  21:32:32,761 - #28 niz
INFO  21:32:32,761 - #12 =
INFO  21:32:32,761 - #39 new
INFO  21:32:32,761 - #28 int
INFO  21:32:32,761 - #14 [
INFO  21:32:32,761 - #25 3
INFO  21:32:32,761 - #15 ]
INFO  21:32:32,761 - #5 ;
INFO  21:32:32,761 - #28 niz
INFO  21:32:32,761 - #14 [
INFO  21:32:32,761 - #25 0
INFO  21:32:32,761 - #15 ]
INFO  21:32:32,761 - #12 =
INFO  21:32:32,761 - #25 1
INFO  21:32:32,762 - #5 ;
INFO  21:32:32,762 - #28 niz
INFO  21:32:32,762 - #14 [
INFO  21:32:32,762 - #25 1
INFO  21:32:32,762 - #15 ]
INFO  21:32:32,762 - #12 =
INFO  21:32:32,762 - #25 2
INFO  21:32:32,762 - #5 ;
INFO  21:32:32,762 - #28 niz
INFO  21:32:32,762 - #14 [
INFO  21:32:32,762 - #25 2
INFO  21:32:32,762 - #15 ]
INFO  21:32:32,762 - #12 =
INFO  21:32:32,762 - #28 sum
INFO  21:32:32,762 - #6 (
INFO  21:32:32,762 - #28 niz
INFO  21:32:32,762 - #14 [
INFO  21:32:32,762 - #25 1
INFO  21:32:32,762 - #15 ]
INFO  21:32:32,762 - #8 ,
INFO  21:32:32,762 - #28 niz
INFO  21:32:32,762 - #14 [
INFO  21:32:32,762 - #25 0
INFO  21:32:32,762 - #15 ]
INFO  21:32:32,762 - #7 )
INFO  21:32:32,762 - #11 +
INFO  21:32:32,762 - #25 1
INFO  21:32:32,762 - #5 ;
INFO  21:32:32,762 - #29 if
INFO  21:32:32,762 - #6 (
INFO  21:32:32,762 - #28 niz
INFO  21:32:32,762 - #14 [
INFO  21:32:32,762 - #25 2
INFO  21:32:32,762 - #15 ]
INFO  21:32:32,762 - #40 ==
INFO  21:32:32,762 - #25 4
INFO  21:32:32,763 - #18 ||
INFO  21:32:32,763 - #28 verify
INFO  21:32:32,763 - #6 (
INFO  21:32:32,763 - #7 )
INFO  21:32:32,763 - #7 )
INFO  21:32:32,763 - #9 print
INFO  21:32:32,763 - #6 (
INFO  21:32:32,763 - #28 ord
INFO  21:32:32,763 - #6 (
INFO  21:32:32,763 - #26 A
INFO  21:32:32,763 - #7 )
INFO  21:32:32,763 - #7 )
INFO  21:32:32,763 - #5 ;
INFO  21:32:32,763 - #30 else
INFO  21:32:32,763 - #9 print
INFO  21:32:32,763 - #6 (
INFO  21:32:32,763 - #28 ord
INFO  21:32:32,763 - #6 (
INFO  21:32:32,764 - #26 a
INFO  21:32:32,764 - #7 )
INFO  21:32:32,764 - #7 )
INFO  21:32:32,764 - #5 ;
INFO  21:32:32,764 - #9 print
INFO  21:32:32,764 - #6 (
INFO  21:32:32,764 - #28 eol
INFO  21:32:32,764 - #7 )
INFO  21:32:32,764 - #5 ;
INFO  21:32:32,764 - #28 i
INFO  21:32:32,764 - #12 =
INFO  21:32:32,764 - #25 0
INFO  21:32:32,764 - #5 ;
INFO  21:32:32,764 - #31 for
INFO  21:32:32,764 - #6 (
INFO  21:32:32,764 - #5 ;
INFO  21:32:32,764 - #28 i
INFO  21:32:32,765 - #45 <
INFO  21:32:32,765 - #25 10
INFO  21:32:32,765 - #5 ;
INFO  21:32:32,765 - #7 )
INFO  21:32:32,765 - #3 {
INFO  21:32:32,765 - #29 if
INFO  21:32:32,765 - #6 (
INFO  21:32:32,765 - #28 i
INFO  21:32:32,765 - #40 ==
INFO  21:32:32,765 - #25 3
INFO  21:32:32,765 - #7 )
INFO  21:32:32,765 - #3 {
INFO  21:32:32,765 - #28 i
INFO  21:32:32,765 - #16 ++
INFO  21:32:32,765 - #5 ;
INFO  21:32:32,765 - #33 continue
INFO  21:32:32,765 - #5 ;
INFO  21:32:32,765 - #4 }
INFO  21:32:32,766 - #29 if
INFO  21:32:32,766 - #6 (
INFO  21:32:32,766 - #28 i
INFO  21:32:32,766 - #40 ==
INFO  21:32:32,766 - #25 4
INFO  21:32:32,766 - #7 )
INFO  21:32:32,766 - #32 break
INFO  21:32:32,766 - #5 ;
INFO  21:32:32,766 - #28 i
INFO  21:32:32,767 - #12 =
INFO  21:32:32,767 - #28 inkrement
INFO  21:32:32,767 - #6 (
INFO  21:32:32,767 - #28 i
INFO  21:32:32,767 - #8 ,
INFO  21:32:32,767 - #25 1
INFO  21:32:32,767 - #7 )
INFO  21:32:32,767 - #5 ;
INFO  21:32:32,767 - #4 }
INFO  21:32:32,767 - #29 if
INFO  21:32:32,767 - #6 (
INFO  21:32:32,767 - #28 i
INFO  21:32:32,767 - #40 ==
INFO  21:32:32,767 - #25 3
INFO  21:32:32,767 - #19 &&
INFO  21:32:32,767 - #28 verify
INFO  21:32:32,767 - #6 (
INFO  21:32:32,767 - #7 )
INFO  21:32:32,767 - #7 )
INFO  21:32:32,767 - #9 print
INFO  21:32:32,767 - #6 (
INFO  21:32:32,768 - #25 4
INFO  21:32:32,768 - #7 )
INFO  21:32:32,768 - #5 ;
INFO  21:32:32,768 - #30 else
INFO  21:32:32,768 - #9 print
INFO  21:32:32,768 - #6 (
INFO  21:32:32,768 - #20 -
INFO  21:32:32,768 - #25 4
INFO  21:32:32,768 - #7 )
INFO  21:32:32,768 - #5 ;
INFO  21:32:32,768 - #34 read
INFO  21:32:32,768 - #6 (
INFO  21:32:32,768 - #28 niz
INFO  21:32:32,768 - #14 [
INFO  21:32:32,768 - #25 0
INFO  21:32:32,768 - #15 ]
INFO  21:32:32,768 - #7 )
INFO  21:32:32,768 - #5 ;
INFO  21:32:32,768 - #34 read
INFO  21:32:32,768 - #6 (
INFO  21:32:32,768 - #28 niz
INFO  21:32:32,768 - #14 [
INFO  21:32:32,768 - #25 1
INFO  21:32:32,768 - #15 ]
INFO  21:32:32,768 - #7 )
INFO  21:32:32,768 - #5 ;
INFO  21:32:32,768 - #34 read
INFO  21:32:32,768 - #6 (
INFO  21:32:32,768 - #28 niz
INFO  21:32:32,768 - #14 [
INFO  21:32:32,768 - #25 2
INFO  21:32:32,768 - #15 ]
INFO  21:32:32,768 - #7 )
INFO  21:32:32,768 - #5 ;
INFO  21:32:32,768 - #9 print
INFO  21:32:32,768 - #6 (
INFO  21:32:32,768 - #28 eol
INFO  21:32:32,768 - #7 )
INFO  21:32:32,768 - #5 ;
INFO  21:32:32,768 - #9 print
INFO  21:32:32,768 - #6 (
INFO  21:32:32,768 - #28 sum
INFO  21:32:32,768 - #6 (
INFO  21:32:32,769 - #28 sum
INFO  21:32:32,769 - #6 (
INFO  21:32:32,769 - #28 niz
INFO  21:32:32,769 - #14 [
INFO  21:32:32,769 - #25 0
INFO  21:32:32,769 - #15 ]
INFO  21:32:32,769 - #8 ,
INFO  21:32:32,769 - #28 niz
INFO  21:32:32,769 - #14 [
INFO  21:32:32,769 - #25 1
INFO  21:32:32,769 - #15 ]
INFO  21:32:32,769 - #7 )
INFO  21:32:32,769 - #8 ,
INFO  21:32:32,769 - #28 niz
INFO  21:32:32,769 - #14 [
INFO  21:32:32,769 - #25 2
INFO  21:32:32,769 - #15 ]
INFO  21:32:32,769 - #7 )
INFO  21:32:32,769 - #7 )
INFO  21:32:32,769 - #5 ;
INFO  21:32:32,769 - #9 print
INFO  21:32:32,769 - #6 (
INFO  21:32:32,769 - #28 eol
INFO  21:32:32,769 - #7 )
INFO  21:32:32,769 - #5 ;
INFO  21:32:32,769 - #9 print
INFO  21:32:32,769 - #6 (
INFO  21:32:32,769 - #28 inkrement
INFO  21:32:32,769 - #6 (
INFO  21:32:32,769 - #28 niz
INFO  21:32:32,769 - #14 [
INFO  21:32:32,769 - #25 2
INFO  21:32:32,769 - #15 ]
INFO  21:32:32,769 - #8 ,
INFO  21:32:32,769 - #25 2
INFO  21:32:32,769 - #7 )
INFO  21:32:32,769 - #7 )
INFO  21:32:32,769 - #5 ;
INFO  21:32:32,769 - #4 }
INFO  21:32:32,769 - #4 }
INFO  21:32:32,782 - Generating bytecode file: C:\Users\ratko\Desktop\PP1-Projekat\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
INFO  21:32:32,790 - Parsiranje uspesno zavrseno!
